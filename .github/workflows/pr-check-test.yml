name: PR Check and Tests

on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["dev"]

jobs:
  pr_check_back:
    name: PR Check Backend
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: PR Check with Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Prepare ambient
        run: |
          rm -f package.json
      
      - name: PR Check
        run: |
          cd ./packages/backend
          yarn --frozen-lockfile
          yarn lint
          yarn type-check

  pr_check_front:
    name: PR Check Frontend
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: PR Check with Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Prepare ambient
        run: |
          rm -f package.json
      
      - name: PR Check
        run: |
          cd ./packages/frontend
          yarn --frozen-lockfile
          yarn lint
          yarn type-check

  unit_tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Unit Tests with Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Backend Unit Test using Node ${{ matrix.node-version }}
        run: |
          cd ./packages/backend
          NODE_ENV=development yarn test:ci

      - name: Frontend Unit Test using Node ${{ matrix.node-version }}
        run: |
          cd ./packages/frontend
          yarn test:coverage
